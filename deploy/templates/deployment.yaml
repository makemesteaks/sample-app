{{- $fullName := include "template-app.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "template-app.fullname" . }}
  labels:
    {{- include "template-app.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
{{- if .Values.rollingUpdate.enabled }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.rollingUpdate }}
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
      {{- end }}
{{- end }}
  selector:
    matchLabels:
      {{- include "template-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "template-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["./main"]
          ports:
            - name: main
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
             path: {{ .Values.livenessProbe }}
             port: {{ .Values.container.port }}
            initialDelaySeconds: {{ .Values.minReadySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
          # readiness probe is purposely been left out in this exercise
          #readinessProbe:
          #  httpGet:
          #    path: {{ .Values.livenessProbe }}
          #    port: {{ .Values.container.port }}
          #  initialDelaySeconds: 15
          #  periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # this is just to avoid nginx ingress controller not reloading fast enough, could be done with a readiness probe
      #initContainers:
      #  - name: wait-for-ingress-controller
      #    image: curlimages/curl:latest
      #    command: ["/bin/sh", "-c"]
      #    args: ["while [ $(curl -sw '%{http_code}' http://{{ .Values.ingress.defaultName }}/test -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for ingress...'; done"]
